import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.util.Random;

public class BabyPenguin extends GameObject{
	
	private Handler handler;
	int HP = 100;
	int velocity = 4;
	private BufferedImage[] penguinA_image = new BufferedImage[3];
	Animation anim;
	private SpriteSheetLvl1 ss;
	
	Random r = new Random();
	int choose = 0;
	
	public BabyPenguin(int x, int y, ID id, Handler handler, SpriteSheetLvl1 ss) {
		super(x, y, id, ss);
		this.handler = handler;
		this.ss = ss;
		
		penguinA_image[0] = ss.grabImage(4, 1, 16, 16);
		penguinA_image[1] = ss.grabImage(5, 1, 16, 16);
		penguinA_image[2] = ss.grabImage(6, 1, 16, 16);
		
		anim = new Animation(3, penguinA_image[0], penguinA_image[1], penguinA_image[2]);
	}

	public void tick() {
		y += velY;
		x += velX;
		
		choose = r.nextInt(10);
		
		if(choose == 0) {
			velX = (r.nextInt(4 - -4) + -4);
			velY = (r.nextInt(4 - -4) + -4);
		}
		
		for(int i = 0; i < handler.object.size(); i++){
			GameObject tempObject = handler.object.get(i);
	
			if(tempObject.getId() == ID.Berg) {
				if(getBounds().intersects(tempObject.getBounds())) {
					velocity *= -1;
					velY = velocity;
					velY *= -1;
				}
			} else if(tempObject.getId() != ID.Berg) {
				velY = velocity;
			}
			
			if(tempObject.getId() == ID.GodBolt) {
				if(getBounds().intersects(tempObject.getBounds())) {
				HP -= 20;
				handler.removeObject(tempObject);
				}
			}
			
			if(tempObject.getId() == ID.Duy) {
				if(getBounds().intersects(tempObject.getBounds())) {
					y += velY * -1;
					Game.hp--;
				}
			}
		}
		
		anim.runAnimation();
		if(HP <= 0) {
			handler.removeObject(this);
			if((int) (Math.random() * 5) == 1) {
				handler.addObject(new Bandaid(x, y, ID.Bandaid, ss));
			}
		}
	}

	public void render(Graphics g) {
			anim.drawAnimation(g, x, y, 0);
			
			Graphics2D g2d = (Graphics2D) g;
			
			g.setColor(Color.green);
			g2d.draw(getBounds());
	}

	public Rectangle getBounds() {
		return new Rectangle(x, y, 32, 32);
	}
}
